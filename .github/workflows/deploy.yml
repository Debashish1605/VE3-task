name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 180294178670.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=latest
          docker build -t my-web-app .
          docker tag my-web-app:latest 180294178670.dkr.ecr.ap-south-1.amazonaws.com/my-web-app:$IMAGE_TAG
          docker push 180294178670.dkr.ecr.ap-south-1.amazonaws.com/my-web-app:$IMAGE_TAG

      - name: Deploy to ECS
        run: |
            NEW_TASK_DEFINITION=$(aws ecs register-task-definition \
            --family my-task-def \
            --requires-compatibilities FARGATE \
            --network-mode awsvpc \
            --cpu "256" \
            --memory "512" \
            --execution-role-arn arn:aws:iam::180294178670:role/ECSExecutionRole \
            --container-definitions "[{\"name\":\"my-container\",\"image\":\"180294178670.dkr.ecr.ap-south-1.amazonaws.com/my-web-app:$IMAGE_TAG\",\"essential\":true,\"memory\":512,\"cpu\":256, \"portMappings\": [{\"containerPort\": 80, \"hostPort\": 80, \"protocol\": \"tcp\"}]}]" \
            --query 'taskDefinition.taskDefinitionArn' --output text)

            aws ecs update-service --cluster my-web-cluster --service my-service --task-definition $NEW_TASK_DEFINITION
          
      - name: Run Integration Tests
        run: |
            # Run your integration tests here, e.g.,
            curl --silent --fail http://13.233.102.76/healthcheck || exit 1

      - name: Rollback on Failure
        if: failure()
        run: |
              # Retrieve the previous task definition ARN
              PREVIOUS_TASK_DEFINITION=$(aws ecs describe-services --cluster my-web-cluster --services my-service --query 'services[0].taskDefinition' --output text)
              aws ecs update-service --cluster my-web-cluster --service my-service --task-definition $PREVIOUS_TASK_DEFINITION

        