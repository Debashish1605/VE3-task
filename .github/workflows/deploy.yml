name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${ runner.os }-buildx-${ github.sha }
        restore-keys: |
          ${ runner.os }-buildx-

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${ secrets.AWS_ACCESS_KEY_ID }
        aws-secret-access-key: ${ secrets.AWS_SECRET_ACCESS_KEY }
        aws-region: ap-south-1

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 180294178670.dkr.ecr.ap-south-1.amazonaws.com

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: 180294178670.dkr.ecr.ap-south-1.amazonaws.com/my-web-app:latest

    - name: Register ECS Task Definition
      id: register-task
      run: |
        sed -i 's|<IMAGE_URI>|180294178670.dkr.ecr.ap-south-1.amazonaws.com/my-web-app:latest|g' ecs-task-definition.json
        aws ecs register-task-definition --cli-input-json file://ecs-task-definition.json

    - name: Update ECS Service
      id: update-service
      run: |
        TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition my-task-definition --query 'taskDefinition.taskDefinitionArn' --output text)
        aws ecs update-service --cluster my-cluster --service my-service --task-definition $TASK_DEF_ARN

    - name: Run Integration Tests
      run: |
        curl -f http://my-service-endpoint/healthcheck || exit 1

    - name: Rollback on Failure
      if: failure()  # This step only runs if previous steps fail
      run: |
        echo "Tests failed, rolling back..."

        # Fetch the previous task definition ARN
        PREVIOUS_TASK_DEF_ARN=$(aws ecs describe-services \
          --cluster my-cluster \
          --services my-service \
          --query 'services[0].deployments[1].taskDefinition' \
          --output text)
          
        if [ -z "$PREVIOUS_TASK_DEF_ARN" ]; then
          echo "No previous task definition found. Rollback failed."
          exit 1
        fi
        
        echo "Rolling back to task definition: $PREVIOUS_TASK_DEF_ARN"
        aws ecs update-service \
          --cluster my-cluster \
          --service my-service \
          --task-definition $PREVIOUS_TASK_DEF_ARN
