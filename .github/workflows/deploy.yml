name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t my-app:latest .

      - name: Tag Docker image
        run: |
          docker tag my-app:latest ${{ steps.ecr_login.outputs.registry }}/my-app:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.ecr_login.outputs.registry }}/my-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: my-ecs-service
          cluster: my-cluster
          wait-for-service-stability: true

  integration-test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Run Integration Tests
        run: |
          curl http://my-app-url/health || exit 1

  rollback:
    needs: integration-test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Rollback on ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: my-ecs-service
          cluster: my-cluster
          wait-for-service-stability: true
